name: CI Windows

on:
  push:
    paths-ignore:
      - 'docs/**'
      - 'tools/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'tools/**'
      - '*.md'

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.1
        with:
          # skip concurrent jobs if they are on the same thing
          concurrent_skipping: 'same_content'
          # never skip PR, release or manual/scheduled runs
          do_not_skip: '["pull_request", "release", "workflow_dispatch", "schedule"]'

  build-windows:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        configuration: [msvc-debug, msvc-release]
        enable_steam: [false]
        include:
          - enable_steam: true
            configuration: msvc-release
    name: 'build-windows [${{ matrix.configuration}}, steam: ${{ matrix.enable_steam }}]'
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Install Conan
      run: pip install conan
    - name: Configure with CMakeSettings.json and build
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: CMakeSettingsJson
        cmakeSettingsJsonPath: '${{ github.workspace }}/CMakeSettings.json'
        useVcpkgToolchainFile: false
        buildDirectory: '${{ github.workspace }}/build'
        configurationRegexFilter: '${{ matrix.configuration }}'
        cmakeAppendedArgs: '-DSTORM_ENABLE_STEAM=${{ matrix.enable_steam }} -DSTORM_ENABLE_CRASH_REPORTS=ON'
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: storm-engine.${{ matrix.configuration }}-steam-${{ matrix.enable_steam}}
        path: build\${{ matrix.configuration }}\bin
